// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int        @id @default(autoincrement())
    email     String     @unique
    phone     BigInt     @unique
    lastName  String
    firstName String
    password  String
    roles     UserRole[]
    createdAt DateTime   @default(now()) @map("created_at")

    @@map("users")
}

model Role {
    id          Int              @id @default(autoincrement())
    name        String           @unique
    users       UserRole[]
    permissions RolePermission[]
    createdAt   DateTime        @default(now()) @map("created_at")

    @@map("roles")
}

model Permission {
    id           Int              @id @default(autoincrement())
    name         String           @unique
    roles        RolePermission[]
    createdAt    DateTime         @default(now()) @map("created_at")

    @@map("permissions")
}

model UserRole {
    user      User     @relation(fields: [userId], references: [id])
    userId    Int      @map("user_id")
    role      Role     @relation(fields: [roleId], references: [id])
    roleId    Int      @map("role_id")
    createdAt DateTime @default(now()) @map("created_at")

    @@id([roleId, userId])
    @@map("user_roles")
}

model RolePermission {
    role         Role       @relation(fields: [roleId], references: [id])
    roleId       Int        @map("role_id")
    permission   Permission @relation(fields: [permissionId], references: [id])
    permissionId Int        @map("permission_id")
    createdAt    DateTime   @default(now()) @map("created_at")

    @@id([roleId, permissionId])
    @@map("role_permissions")
}
